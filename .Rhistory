lampyridae <- read.csv("data/lampyridae_counts_new.csv")
# looking at the data structure
glimpse(lampyridae)
# generating key initial summary statistics for each variable
# also includes frequencies for character variables to quickly understand data distribution
summary(lampyridae)
# per column summaries
# includes data types, missing data, and statistics
skimr::skim(lampyridae)
# checking the data column names
colnames(lampyridae)
# cleaning column names
lampyridae_clean_names <- janitor::clean_names(lampyridae)
# checking new column names
colnames(lampyridae_clean_names)
# prints each unique character string in the data
# only needs to be checked in required categorical variable columns
# checking habitat column
lampyridae_clean_names |>
distinct(habitat)
# checking lampyridae count column
lampyridae_clean_names |>
distinct(g5_lampyridae)
# check for duplicates across whole dataset
# rows in the data
lampyridae_clean_names |>
duplicated() |>
sum()
# firstly removing rows where habitat column contains N/A values
lampyridae_complete <- subset(lampyridae_no_dupes, habitat !='N/A' )
# firstly removing rows where habitat column contains N/A values
lampyridae_complete <- subset(lampyridae_clean_names, habitat !='N/A' )
# checking for missing data
lampyridae_complete |>
# Filter rows where g5_lampyridae is NA
filter(is.na(g5_lampyridae)) |>
# Group by project_sample_id and habitat
group_by(project_sample_id, habitat) |>
summarise(n_missing = n())
# saving new dataset
write.csv(lampyridae_complete, file = "data/lampyridae_tidy.csv")
# filtering only lampyridae counts
lampyridae_only <- filter(.data = lampyridae_complete,
count_type == "lampyridae")
# making a standard scatterplot to show spread of data
lampyridae_scatter_alpha <- lampyridae_only |>
ggplot(aes(x = habitat, y = g5_lampyridae)) +
geom_point()
print(lampyridae_scatter_alpha)
# making a violin plot
lampyridae_violin_alpha <- lampyridae_only |>
ggplot(aes(x = habitat,
y = g5_lampyridae)) +
geom_violin(width = 0.5) +
labs(title = "Lampyridae")
print(lampyridae_violin_alpha)
# firstly have to generate statistics for the error lines
lampyridae_summary <- lampyridae_only |>
group_by(habitat) |>
summarise(mean = mean(g5_lampyridae, na.rm =T),
sd = sd(g5_lampyridae, na.rm=T))
# making the bar plot
lampyridae_bar_alpha <- lampyridae_summary |>
ggplot(aes(x = habitat,
y = mean))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd))
print(lampyridae_bar_alpha)
# filtering out total data
totals_only <- filter(.data = lampyridae_complete,
count_type == "total")
total_violin_alpha <- totals_only |>
ggplot(aes(x = habitat,
y = g5_lampyridae)) +
geom_violin(width = 0.5) +
labs(title = "Total")
print(total_violin_alpha)
# combined plot
combined_violin_beta <- lampyridae_complete |>
ggplot(aes(x = habitat,
y = g5_lampyridae)) +
geom_violin(aes(colour = count_type), width = 0.5)
print(combined_violin_beta)
duo_plot_beta <- lampyridae_violin_alpha + total_violin_alpha
print(duo_plot_beta)
# saving marginal plot
ggsave("figures/duo_plot_beta.pdf",
plot = duo_plot_beta,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# saving combined plot
ggsave("figures/combined_plot_beta.pdf",
plot = combined_plot_beta,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# saving combined plot
ggsave("figures/combined_violin_beta.pdf",
plot = combined_plot_beta,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# saving combined plot
ggsave("figures/combined_violin_beta.pdf",
plot = combined_violin_beta,
width = 25,
height = 15,
units = "cm",
device = "pdf")
total_violin_beta <- totals_only |>
ggplot(aes(x = habitat,
y = g5_lampyridae)) +
geom_violin(width = 0.5) +
labs(title = "Total")
print(total_violin_beat)
print(total_violin_beta)
# saving combined plot
ggsave("figures/total_violin_alpha.pdf",
plot = total_violin_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# saving lampyridae violin plot
ggsave("figures/lampyridae_violin_alpha.pdf",
plot = lampyridae_violin_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# saving the bar plot
ggsave("figures/lampyridae_bar_alpha.pdf",
plot = lampyridae_bar_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# saving lampyridae scatter plot
ggsave("figures/lampyridae_scatter_alpha.pdf",
plot = lampyridae_scatter_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
total_violin_beta <- totals_only |>
ggplot(aes(x = habitat,
y = g5_lampyridae)) +
geom_violin(width = 0.5) +
labs(title = "Total")
print(total_violin_beta)
# saving totals plot
ggsave("figures/total_violin_beta.pdf",
plot = total_violin_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# saving totals plot
ggsave("figures/total_violin_beta.pdf",
plot = total_violin_beta,
width = 25,
height = 15,
units = "cm",
device = "pdf")
duo_plot_beta <- lampyridae_violin_alpha + total_violin_beta
# reading csv file
lampyridae <- read.csv("data/lampyridae_counts_new.csv")
# looking at the data structure
glimpse(lampyridae)
# generating key initial summary statistics for each variable
# also includes frequencies for character variables to quickly understand data distribution
summary(lampyridae)
# per column summaries
# includes data types, missing data, and statistics
skimr::skim(lampyridae)
# checking the data column names
colnames(lampyridae)
# cleaning column names
lampyridae_clean_names <- janitor::clean_names(lampyridae)
# checking new column names
colnames(lampyridae_clean_names)
# prints each unique character string in the data
# only needs to be checked in required categorical variable columns
# checking habitat column
lampyridae_clean_names |>
distinct(habitat)
# checking lampyridae count column
lampyridae_clean_names |>
distinct(g5_lampyridae)
# check for duplicates across whole dataset
# rows in the data
lampyridae_clean_names |>
duplicated() |>
sum()
# inspecting the duplicated rows
lampyridae_clean_names |>
dplyr::group_by(dplyr::across(everything())) |>
dplyr::filter(dplyr::n() > 1) |>
dplyr::ungroup() |> view()
# firstly removing rows where habitat column contains N/A values
lampyridae_complete <- subset(lampyridae_clean_names, habitat !='N/A' )
# checking for missing data
lampyridae_complete |>
# Filter rows where g5_lampyridae is NA
filter(is.na(g5_lampyridae)) |>
# Group by project_sample_id and habitat
group_by(project_sample_id, habitat) |>
summarise(n_missing = n())
# saving new dataset
write.csv(lampyridae_complete, file = "data/lampyridae_tidy.csv")
# filtering only lampyridae counts
lampyridae_only <- filter(.data = lampyridae_complete,
count_type == "lampyridae")
# making a standard scatterplot to show spread of data
lampyridae_scatter_alpha <- lampyridae_only |>
ggplot(aes(x = habitat, y = g5_lampyridae)) +
geom_point()
print(lampyridae_scatter_alpha)
# saving lampyridae scatter plot
ggsave("figures/lampyridae_scatter_alpha.pdf",
plot = lampyridae_scatter_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# making a violin plot
lampyridae_violin_alpha <- lampyridae_only |>
ggplot(aes(x = habitat,
y = g5_lampyridae)) +
geom_violin(width = 0.5) +
labs(title = "Lampyridae")
print(lampyridae_violin_alpha)
# saving lampyridae violin plot
ggsave("figures/lampyridae_violin_alpha.pdf",
plot = lampyridae_violin_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# firstly have to generate statistics for the error lines
lampyridae_summary <- lampyridae_only |>
group_by(habitat) |>
summarise(mean = mean(g5_lampyridae, na.rm =T),
sd = sd(g5_lampyridae, na.rm=T))
# making the bar plot
lampyridae_bar_alpha <- lampyridae_summary |>
ggplot(aes(x = habitat,
y = mean))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd))
print(lampyridae_bar_alpha)
# saving the bar plot
ggsave("figures/lampyridae_bar_alpha.pdf",
plot = lampyridae_bar_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# filtering out total data
totals_only <- filter(.data = lampyridae_complete,
count_type == "total")
total_violin_beta <- totals_only |>
ggplot(aes(x = habitat,
y = g5_lampyridae)) +
geom_violin(width = 0.5) +
labs(title = "Total")
print(total_violin_beta)
# saving totals plot
ggsave("figures/total_violin_beta.pdf",
plot = total_violin_beta,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# combined plot
combined_violin_beta <- lampyridae_complete |>
ggplot(aes(x = habitat,
y = g5_lampyridae)) +
geom_violin(aes(colour = count_type), width = 0.5)
print(combined_violin_beta)
# saving combined plot
ggsave("figures/combined_violin_beta.pdf",
plot = combined_violin_beta,
width = 25,
height = 15,
units = "cm",
device = "pdf")
duo_plot_beta <- lampyridae_violin_alpha + total_violin_beta
print(duo_plot_beta)
# saving duo plot
ggsave("figures/duo_plot_beta.pdf",
plot = duo_plot_beta,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# saving duo plot
ggsave("figures/duo_plot_beta.pdf",
plot = duo_plot_beta,
width = 50,
height = 15,
units = "cm",
device = "pdf")
# saving duo plot
ggsave("figures/duo_plot_beta.pdf",
plot = duo_plot_beta,
width = 50,
height = 15,
units = "cm",
device = "pdf")
# saving combined plot
ggsave("figures/combined_violin_beta.pdf",
plot = combined_violin_beta,
width = 40,
height = 15,
units = "cm",
device = "pdf")
# reading csv file
lampyridae <- read.csv("data/lampyridae_counts_new.csv")
# looking at the data structure
glimpse(lampyridae)
# generating key initial summary statistics for each variable
# also includes frequencies for character variables to quickly understand data distribution
summary(lampyridae)
# per column summaries
# includes data types, missing data, and statistics
skimr::skim(lampyridae)
# checking the data column names
colnames(lampyridae)
# cleaning column names
lampyridae_clean_names <- janitor::clean_names(lampyridae)
# checking new column names
colnames(lampyridae_clean_names)
# required packages
library(tidyr)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(patchwork)
# prints each unique character string in the data
# only needs to be checked in required categorical variable columns
# checking habitat column
lampyridae_clean_names |>
distinct(habitat)
# checking lampyridae count column
lampyridae_clean_names |>
distinct(g5_lampyridae)
# check for duplicates across whole dataset
# rows in the data
lampyridae_clean_names |>
duplicated() |>
sum()
# inspecting the duplicated rows
lampyridae_clean_names |>
dplyr::group_by(dplyr::across(everything())) |>
dplyr::filter(dplyr::n() > 1) |>
dplyr::ungroup() |> view()
# firstly removing rows where habitat column contains N/A values
lampyridae_complete <- subset(lampyridae_clean_names, habitat !='N/A' )
# checking for missing data
lampyridae_complete |>
# Filter rows where g5_lampyridae is NA
filter(is.na(g5_lampyridae)) |>
# Group by project_sample_id and habitat
group_by(project_sample_id, habitat) |>
summarise(n_missing = n())
# saving new dataset
write.csv(lampyridae_complete, file = "data/lampyridae_tidy.csv")
# filtering only lampyridae counts
lampyridae_only <- filter(.data = lampyridae_complete,
count_type == "lampyridae")
# making a standard scatterplot to show spread of data
lampyridae_scatter_alpha <- lampyridae_only |>
ggplot(aes(x = habitat, y = g5_lampyridae)) +
geom_point()
print(lampyridae_scatter_alpha)
# saving lampyridae scatter plot
ggsave("figures/lampyridae_scatter_alpha.pdf",
plot = lampyridae_scatter_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# making a violin plot
lampyridae_violin_alpha <- lampyridae_only |>
ggplot(aes(x = habitat,
y = g5_lampyridae)) +
geom_violin(width = 0.5) +
labs(title = "Lampyridae")
print(lampyridae_violin_alpha)
# making a violin plot
lampyridae_violin_alpha <- lampyridae_only |>
ggplot(aes(x = habitat,
y = g5_lampyridae)) +
geom_violin(width = 0.5) +
labs(title = "Lampyridae")
print(lampyridae_violin_alpha)
# saving lampyridae violin plot
ggsave("figures/lampyridae_violin_alpha.pdf",
plot = lampyridae_violin_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# firstly have to generate statistics for the error lines
lampyridae_summary_alpha <- lampyridae_only |>
group_by(habitat) |>
summarise(mean = mean(g5_lampyridae, na.rm =T),
sd = sd(g5_lampyridae, na.rm=T))
# making the bar plot
lampyridae_bar_alpha <- lampyridae_summary |>
ggplot(aes(x = habitat,
y = mean))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd))
print(lampyridae_bar_alpha)
# saving the bar plot
ggsave("figures/lampyridae_bar_alpha.pdf",
plot = lampyridae_bar_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# filtering out total data
totals_only <- filter(.data = lampyridae_complete,
count_type == "total")
total_violin_beta <- totals_only |>
ggplot(aes(x = habitat,
y = g5_lampyridae)) +
geom_violin(width = 0.5) +
labs(title = "Total")
print(total_violin_beta)
# saving totals plot
ggsave("figures/total_violin_beta.pdf",
plot = total_violin_beta,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# combined plot
combined_violin_beta <- lampyridae_complete |>
ggplot(aes(x = habitat,
y = g5_lampyridae)) +
geom_violin(aes(colour = count_type), width = 0.5)
print(combined_violin_beta)
# saving combined plot
ggsave("figures/combined_violin_beta.pdf",
plot = combined_violin_beta,
width = 40,
height = 15,
units = "cm",
device = "pdf")
duo_plot_beta <- lampyridae_violin_alpha + total_violin_beta
print(duo_plot_beta)
# saving duo plot
ggsave("figures/duo_plot_beta.pdf",
plot = duo_plot_beta,
width = 50,
height = 15,
units = "cm",
device = "pdf")
### --- beta diversity --- ###
lampyridae_summary_beta <- lampyridae_complete |>
group_by(habitat, count_type) |>
summarise(mean = mean(g5_lampyridae, na.rm =T),
sd = sd(g5_lampyridae, na.rm=T))
View(lampyridae_summary_beta)
?vegan
??vegan
install.packages("rdiversity")
library(rdiversity)
lampyridae_alpha <- raw_alpha(lampyridae_only)
?raw_alpha
View(lampyridae)
# reading csv file
lampyridae <- read.csv("data/mexico.csv")
# reading csv file
lampyridae <- read.csv("data/mexico.csv")
View(lampyridae)
# looking at the data structure
glimpse(lampyridae)
# generating key initial summary statistics for each variable
# also includes frequencies for character variables to quickly understand data distribution
summary(lampyridae)
# per column summaries
# includes data types, missing data, and statistics
skimr::skim(lampyridae)
# checking the data column names
colnames(lampyridae)
# cleaning column names
lampyridae_clean_names <- janitor::clean_names(lampyridae)
# checking new column names
colnames(lampyridae_clean_names)
# reading csv file
lampyridae <- read.csv("data/mexico.csv")
# looking at the data structure
glimpse(lampyridae)
# generating key initial summary statistics for each variable
# also includes frequencies for character variables to quickly understand data distribution
summary(lampyridae)
# per column summaries
# includes data types, missing data, and statistics
skimr::skim(lampyridae)
# want to make data frame "longer" by compiling group data together
lampyridae_long <- pivot_longer(lampyridae, names_to = “count_type”,
