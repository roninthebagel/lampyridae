totals_only <- filter(.data = lampyridae_end,
count_type == "Total.Individuals")
total_violin_beta <- totals_only |>
ggplot(aes(x = habitat,
y = count)) +
geom_violin(width = 0.5) +
labs(title = "Total")
print(total_violin_beta)
# saving totals plot
ggsave("figures/total_violin_beta.pdf",
plot = total_violin_beta,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# combined plot
combined_violin_beta <- lampyridae_end |>
ggplot(aes(x = habitat,
y = count)) +
geom_violin(aes(colour = count_type), width = 0.5)
print(combined_violin_beta)
# saving combined plot
ggsave("figures/combined_violin_beta.pdf",
plot = combined_violin_beta,
width = 40,
height = 15,
units = "cm",
device = "pdf")
duo_plot_beta <- lampyridae_violin_alpha + total_violin_beta
print(duo_plot_beta)
# saving duo plot
ggsave("figures/duo_plot_beta.pdf",
plot = duo_plot_beta,
width = 50,
height = 15,
units = "cm",
device = "pdf")
# just species differences
no_totals <- filter(lampyridae_end, count_type != "Total.Individuals")
# no totals plot
no_totals_violin_beta <- no_totals |>
ggplot(aes(x = habitat,
y = count)) +
geom_violin(aes(colour = count_type), width = 0.5)
print(no_totals_beta)
# no totals plot
no_totals_violin_beta <- no_totals |>
ggplot(aes(x = habitat,
y = count)) +
geom_violin(aes(colour = count_type), width = 0.5)
print(no_totals_beta)
print(no_totals_violin_beta)
# saving no totals plot
ggsave("figures/no_totals_violin_beta.pdf",
plot = no_totals_violin_beta,
width = 40,
height = 15,
units = "cm",
device = "pdf")
# removing end rows
lampyridae_no_junk <- filter(lampyridae_end, habitat == "Preserved tropical dry forest", "Moderately disturbed tropical dry forest", "Highly disturbed tropical dry forest", "Deciduous forest") |>
filter(lampyridae_end, habitat != "#N/A")
# saving new dataset
write.csv(lampyridae_no_junk, file = "data/lampyridae_tidy.csv")
# filtering only lampyridae counts
lampyridae_only <- filter(.data = lampyridae_no_junk_,
count_type == "G5.Lampyridae")
# filtering only lampyridae counts
lampyridae_only <- filter(.data = lampyridae_no_junk,
count_type == "G5.Lampyridae")
# making a standard scatterplot to show spread of data
lampyridae_scatter_alpha <- lampyridae_only |>
ggplot(aes(x = habitat, y = count)) +
geom_point()
print(lampyridae_scatter_alpha)
# saving lampyridae scatter plot
ggsave("figures/lampyridae_scatter_alpha.pdf",
plot = lampyridae_scatter_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# making a violin plot
lampyridae_violin_alpha <- lampyridae_only |>
ggplot(aes(x = habitat,
y = count)) +
geom_violin(width = 0.5) +
labs(title = "Lampyridae")
print(lampyridae_violin_alpha)
# saving lampyridae violin plot
ggsave("figures/lampyridae_violin_alpha.pdf",
plot = lampyridae_violin_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# firstly have to generate statistics for the error lines
lampyridae_summary_alpha <- lampyridae_only |>
group_by(habitat) |>
summarise(mean = mean(count, na.rm =T),
sd = sd(count, na.rm=T))
# making the bar plot
lampyridae_bar_alpha <- lampyridae_summary |>
ggplot(aes(x = habitat,
y = mean))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd))
print(lampyridae_bar_alpha)
# saving the bar plot
ggsave("figures/lampyridae_bar_alpha.pdf",
plot = lampyridae_bar_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# filtering out total data
totals_only <- filter(.data = lampyridae_end,
count_type == "Total.Individuals")
# filtering out total data
totals_only <- filter(.data = lampyridae_no_junk,
count_type == "Total.Individuals")
total_violin_beta <- totals_only |>
ggplot(aes(x = habitat,
y = count)) +
geom_violin(width = 0.5) +
labs(title = "Total")
print(total_violin_beta)
# saving totals plot
ggsave("figures/total_violin_beta.pdf",
plot = total_violin_beta,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# combined plot
combined_violin_beta <- lampyridae_no_junk |>
ggplot(aes(x = habitat,
y = count)) +
geom_violin(aes(colour = count_type), width = 0.5)
print(combined_violin_beta)
# saving combined plot
ggsave("figures/combined_violin_beta.pdf",
plot = combined_violin_beta,
width = 40,
height = 15,
units = "cm",
device = "pdf")
duo_plot_beta <- lampyridae_violin_alpha + total_violin_beta
print(duo_plot_beta)
# saving duo plot
ggsave("figures/duo_plot_beta.pdf",
plot = duo_plot_beta,
width = 50,
height = 15,
units = "cm",
device = "pdf")
# just species differences
no_totals <- filter(lampyridae_no_junk, count_type != "Total.Individuals")
# no totals plot
no_totals_violin_beta <- no_totals |>
ggplot(aes(x = habitat,
y = count)) +
geom_violin(aes(colour = count_type), width = 0.5)
print(no_totals_violin_beta)
# saving no totals plot
ggsave("figures/no_totals_violin_beta.pdf",
plot = no_totals_violin_beta,
width = 40,
height = 15,
units = "cm",
device = "pdf")
# removing end rows
lampyridae_no_junk <- filter(lampyridae_end, habitat == "Preserved tropical dry forest", "Moderately disturbed tropical dry forest", "Highly disturbed tropical dry forest", "Deciduous forest")
# removing end rows
lampyridae_no_junk <- filter(lampyridae_end, habitat == "Preserved tropical dry forest", "Moderately disturbed tropical dry forest", "Highly disturbed tropical dry forest", "Deciduous forest")
# removing end rows
lampyridae_no_junk <- filter(lampyridae_end, habitat == c("Preserved tropical dry forest", "Moderately disturbed tropical dry forest", "Highly disturbed tropical dry forest", "Deciduous forest"))
# saving new dataset
write.csv(lampyridae_no_junk, file = "data/lampyridae_tidy.csv")
# filtering only lampyridae counts
lampyridae_only <- filter(.data = lampyridae_no_junk,
count_type == "G5.Lampyridae")
# making a standard scatterplot to show spread of data
lampyridae_scatter_alpha <- lampyridae_only |>
ggplot(aes(x = habitat, y = count)) +
geom_point()
print(lampyridae_scatter_alpha)
# saving lampyridae scatter plot
ggsave("figures/lampyridae_scatter_alpha.pdf",
plot = lampyridae_scatter_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# making a violin plot
lampyridae_violin_alpha <- lampyridae_only |>
ggplot(aes(x = habitat,
y = count)) +
geom_violin(width = 0.5) +
labs(title = "Lampyridae")
print(lampyridae_violin_alpha)
# saving lampyridae violin plot
ggsave("figures/lampyridae_violin_alpha.pdf",
plot = lampyridae_violin_alpha,
width = 25,
height = 15,
units = "cm",
device = "pdf")
# firstly have to generate statistics for the error lines
lampyridae_summary_alpha <- lampyridae_only |>
group_by(habitat) |>
summarise(mean = mean(count, na.rm =T),
sd = sd(count, na.rm=T))
# making the bar plot
lampyridae_bar_alpha <- lampyridae_summary |>
ggplot(aes(x = habitat,
y = mean))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = mean-sd,
ymax = mean+sd))
View(totals_only)
View(lampyridae_no_junk)
View(lampyridae_end)
summary(lampyridae_no_junk)
skimr::skim(lampyridae_no_junk)
# removing end rows
lampyridae_no_junk <- filter(lampyridae_end, habitat == c("Preserved tropical dry forest", "Moderately disturbed tropical dry forest", "Highly disturbed tropical dry forest", "Deciduous forest"))
# filtering only lampyridae counts
lampyridae_only <- filter(.data = lampyridae_no_junk,
count_type == "G5.Lampyridae")
View(lampyridae_only)
lampyridae_no_junk |>
distinct(habitat)
# filtering only lampyridae counts
lampyridae_only <- filter(.data = lampyridae_no_junk,
count_type == "G5.Lampyridae")
lampyridae_only |>
distinct(habitat)
# filtering only lampyridae counts
lampyridae_only <- filter(.data = lampyridae_no_junk,
count_type == "G5.Lampyridae")
# making a standard scatterplot to show spread of data
lampyridae_scatter_alpha <- lampyridae_only |>
ggplot(aes(x = habitat, y = count)) +
geom_point()
print(lampyridae_scatter_alpha)
# firstly removing rows where habitat column contains N/A values
lampyridae_complete <- subset(lampyridae_no_dupes, habitat !='N/A' )
# checking for missing data
lampyridae_complete |>
# Filter rows where g5_lampyridae is NA
filter(is.na(count)) |>
# Group by project_sample_id and habitat
group_by(project_sample_id, habitat, count_type, flickr_order) |>
summarise(n_missing = n())
# removing missing data
lampyridae_end <- lampyridae_complete |>
drop_na(flickr_order)
# removing end rows
lampyridae_no_junk <- filter(lampyridae_end, habitat == c("Preserved tropical dry forest", "Moderately disturbed tropical dry forest", "Highly disturbed tropical dry forest", "Deciduous forest"))
# filtering only lampyridae counts
lampyridae_only <- filter(.data = lampyridae_no_junk,
count_type == "G5.Lampyridae")
# making a standard scatterplot to show spread of data
lampyridae_scatter_alpha <- lampyridae_only |>
ggplot(aes(x = habitat, y = count)) +
geom_point()
print(lampyridae_scatter_alpha)
# filtering only lampyridae counts
lampyridae_only <- filter(.data = lampyridae_no_junk,
count_type == "G5.Lampyridae")
# making a standard scatterplot to show spread of data
lampyridae_scatter_alpha <- lampyridae_only |>
ggplot(aes(x = habitat, y = count)) +
geom_point()
print(lampyridae_scatter_alpha)
total_violin_beta <- totals_only |>
ggplot(aes(x = habitat,
y = count)) +
geom_violin(width = 0.5) +
labs(title = "Total")
print(total_violin_beta)
# filtering out total data
totals_only <- filter(.data = lampyridae_no_junk,
count_type == "Total.Individuals")
total_violin_beta <- totals_only |>
ggplot(aes(x = habitat,
y = count)) +
geom_violin(width = 0.5) +
labs(title = "Total")
print(total_violin_beta)
lampyridae_only |>
distinct(habitat)
totals_only |>
distinct(habitat)
lampyridae_no_junk |>
distinct(habitat)
# checking for missing data
lampyridae_complete |>
# Filter rows where g5_lampyridae is NA
filter(is.na(count)) |>
# Group by project_sample_id and habitat
group_by(project_sample_id, habitat, count_type, flickr_order) |>
summarise(n_missing = n())
# checking for missing data
lampyridae_complete |>
# Filter rows where g5_lampyridae is NA
filter(is.na(count)) |>
# Group by project_sample_id and habitat
group_by(count_type) |>
summarise(n_missing = n())
install.packages("mice")
install.packages("mice")
library(mice)
lampyridae_end <- lampyridae_complete |>
mutate(count = replace_na(count,
mean(lampyridae_complete$count, na.rm = T))) # replace NA in body_mass_g with the mean of body_mass_g
lampyridae_complete |>
distinct(habitat)
# removing end rows
lampyridae_no_junk <- filter(lampyridae_end, habitat == c("Preserved tropical dry forest", "Moderately disturbed tropical dry forest", "Highly disturbed tropical dry forest", "Deciduous forest"))
lampyridae_end <- lampyridae_complete |>
mutate(count = replace_na(count,
mean(lampyridae_complete$count, na.rm = T)))
# removing end rows
lampyridae_habitat <- filter(lampyridae_end, habitat == c("Preserved tropical dry forest", "Moderately disturbed tropical dry forest", "Highly disturbed tropical dry forest", "Deciduous forest"))
lampyridae_habitat |>
distinct(habitat)
# filtering only lampyridae counts
lampyridae_only <- filter(.data = lampyridae_habitat,
count_type == "G5.Lampyridae")
# making a standard scatterplot to show spread of data
lampyridae_scatter_alpha <- lampyridae_only |>
ggplot(aes(x = habitat, y = count)) +
geom_point()
print(lampyridae_scatter_alpha)
# reading csv file
lampyridae <- read.csv("data/mexico.csv")
# looking at the data structure
glimpse(lampyridae)
# looking at the data structure
glimpse(lampyridae)
# generating key initial summary statistics for each variable
# also includes frequencies for character variables to quickly understand data distribution
summary(lampyridae)
# per column summaries
# includes data types, missing data, and statistics
skimr::skim(lampyridae)
# using pivot_wider
lampyridae_data_long <- pivot_longer(lampyridae, names_to = "count_type",
values_to = "count", cols = c("G1.Elateridae", "G2.Cerambycidae", "G3.Curculionidae", "G4.Scarabaeidae", "G5.Lampyridae", "Total.Individuals"))
View(lampyridae_data_long)
### --- removing summary rows --- ###
lampyridae_no_summary <- lampyridae_data_long[-c(4765:5430), ]
View(lampyridae_no_summary)
# checking the data column names
colnames(lampyridae_no_summary)
# cleaning column names
lampyridae_clean_names <- janitor::clean_names(lampyridae_no_summary)
# checking new column names
colnames(lampyridae_clean_names)
# prints each unique character string in the data
# only needs to be checked in required categorical variable columns
# checking habitat column
lampyridae_clean_names |>
distinct(habitat)
# checking lampyridae count column
lampyridae_clean_names |>
distinct(count_type)
# check for duplicates across whole dataset
# rows in the data
lampyridae_clean_names |>
duplicated() |>
sum()
# firstly removing rows where habitat column contains N/A values
lampyridae_complete <- subset(lampyridae_no_dupes, habitat !='N/A' )
# firstly removing rows where habitat column contains N/A values
lampyridae_complete <- subset(lampyridae_clean_names, habitat !='N/A' )
# checking for missing data
lampyridae_complete |>
# Filter rows where g5_lampyridae is NA
filter(is.na(count)) |>
# Group by project_sample_id and habitat
group_by(count_type) |>
summarise(n_missing = n())
# removing end rows
lampyridae_habitat <- filter(lampyridae_complete, habitat == c("Preserved tropical dry forest", "Moderately disturbed tropical dry forest", "Highly disturbed tropical dry forest", "Deciduous forest"))
lampyridae_habitat |>
distinct(habitat)
# filtering only lampyridae counts
lampyridae_only <- filter(.data = lampyridae_habitat,
count_type == "G5.Lampyridae")
# making a standard scatterplot to show spread of data
lampyridae_scatter_alpha <- lampyridae_only |>
ggplot(aes(x = habitat, y = count)) +
geom_point()
print(lampyridae_scatter_alpha)
# making a standard scatterplot to show spread of data
lampyridae_scatter_alpha <- lampyridae_only |>
ggplot(aes(x = habitat, y = count)) +
geom_point()
print(lampyridae_scatter_alpha)
lampyridae_only |>
distinct(habitat)
# reading csv file
lampyridae <- read.csv("data/lampyridae_counts.csv")
# looking at the data structure
glimpse(lampyridae)
# generating key initial summary statistics for each variable
# also includes frequencies for character variables to quickly understand data distribution
summary(lampyridae)
# per column summaries
# includes data types, missing data, and statistics
skimr::skim(lampyridae)
# using pivot_wider
lampyridae_data_long <- pivot_longer(lampyridae, names_to = "count_type",
values_to = "count", cols = c("G1.Elateridae", "G2.Cerambycidae", "G3.Curculionidae", "G4.Scarabaeidae", "G5.Lampyridae", "Total.Individuals"))
# reading csv file
lampyridae <- read.csv("data/lampyridae_counts.csv")
# looking at the data structure
glimpse(lampyridae)
# generating key initial summary statistics for each variable
# also includes frequencies for character variables to quickly understand data distribution
summary(lampyridae)
# per column summaries
# includes data types, missing data, and statistics
skimr::skim(lampyridae)
# using pivot_wider
lampyridae_data_long <- pivot_longer(lampyridae, names_to = "count_type",
values_to = "count", cols = c("G1.Elateridae", "G2.Cerambycidae", "G3.Curculionidae", "G4.Scarabaeidae", "G5.Lampyridae", "Total.Individuals"))
rlang::last_trace()
# required packages
library(tidyr)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(patchwork)
# using pivot_wider
lampyridae_data_long <- pivot_longer(lampyridae, names_to = "count_type",
values_to = "count", cols = c("G1.Elateridae", "G2.Cerambycidae", "G3.Curculionidae", "G4.Scarabaeidae", "G5.Lampyridae", "Total.Individuals"))
View(lampyridae)
# setting G1.Elateridae as a integer
?as.factor
# setting G1.Elateridae as a integer
?as.factor()
# setting G1.Elateridae as a integer
?as.factor()
# setting G1.Elateridae as a integer
?as.integer
# setting G1.Elateridae as a integer
lampyridae |>
as.integer(G1.Elateridae)
# setting G1.Elateridae as a integer
lampyridae |>
as.integer("G1.Elateridae")
# reading csv file
lampyridae <- read.csv("data/lampyridae_counts_new.csv")
# looking at the data structure
glimpse(lampyridae)
# generating key initial summary statistics for each variable
# also includes frequencies for character variables to quickly understand data distribution
summary(lampyridae)
# per column summaries
# includes data types, missing data, and statistics
skimr::skim(lampyridae)
# using pivot_wider
lampyridae_data_long <- pivot_longer(lampyridae, names_to = "count_type",
values_to = "count", cols = c("G5.Lampyridae", "Total.Individuals"))
View(lampyridae_data_long)
### --- removing summary rows --- ###
lampyridae_no_summary <- lampyridae_data_long[-c(1587:1638), ]
# checking the data column names
colnames(lampyridae_no_summary)
# cleaning column names
lampyridae_clean_names <- janitor::clean_names(lampyridae_no_summary)
# checking new column names
colnames(lampyridae_clean_names)
# prints each unique character string in the data
# only needs to be checked in required categorical variable columns
# checking habitat column
lampyridae_clean_names |>
distinct(habitat)
# checking lampyridae count column
lampyridae_clean_names |>
distinct(count_type)
# check for duplicates across whole dataset
# rows in the data
lampyridae_clean_names |>
duplicated() |>
sum()
# firstly removing rows where habitat column contains N/A values
lampyridae_complete <- subset(lampyridae_clean_names, habitat !='N/A' )
# checking for missing data
lampyridae_complete |>
# Filter rows where g5_lampyridae is NA
filter(is.na(count)) |>
# Group by project_sample_id and habitat
group_by(count_type) |>
summarise(n_missing = n())
# removing end rows
lampyridae_habitat <- filter(lampyridae_complete, habitat == c("Preserved tropical dry forest", "Moderately disturbed tropical dry forest", "Highly disturbed tropical dry forest", "Deciduous forest"))
lampyridae_habitat |>
distinct(habitat)
# filtering only lampyridae counts
lampyridae_only <- filter(.data = lampyridae_habitat,
count_type == "G5.Lampyridae")
# making a standard scatterplot to show spread of data
lampyridae_scatter_alpha <- lampyridae_only |>
ggplot(aes(x = habitat, y = count)) +
geom_point()
print(lampyridae_scatter_alpha)
